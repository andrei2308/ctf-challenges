#!/usr/bin/env python3

# Read the encrypted file
with open('msg.enc', 'r') as f:
    hex_data = f.read().strip()

ciphertext = bytes.fromhex(hex_data)
print(f"Ciphertext: {hex_data}")

# Find modular inverse of 123 mod 256 using Extended Euclidean Algorithm
def mod_inverse(a, m):
    def extended_gcd(a, b):
        if a == 0:
            return b, 0, 1
        gcd, x1, y1 = extended_gcd(b % a, a)
        x = y1 - (b // a) * x1
        y = x1
        return gcd, x, y

    gcd, x, y = extended_gcd(a, m)
    if gcd != 1:
        return None
    return (x % m + m) % m

# Decrypt: pt = (ct - 18) * inv(123) mod 256
inv_123 = mod_inverse(123, 256)
print(f"Inverse of 123 mod 256: {inv_123}")

decrypted = []
for ct_byte in ciphertext:
    pt = ((ct_byte - 18) * inv_123) % 256
    decrypted.append(pt)

# Convert to string
flag = ''.join(chr(b) for b in decrypted)
print(f"\n*** FLAG: {flag} ***")